# fe-skeleton-autogenerated
# This file can be changed, remove the first line then.
# It MUST BE versioned!
name: CI with Composer scripts
on:
    schedule:
        - cron: '45 9,15 * * 1-5'
    push:
        branches:
            - production
            - main
env:
    CI_GIT_BRANCH: 'feature/vite'
    ACTION_URL: 'https://github.com/faktore-git/grur/actions'

permissions:
    contents: read
jobs:
    php-lint:
        name: "PHP linter"
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout"
              uses: actions/checkout@v4
              with:
                ref: "${{ env.CI_GIT_BRANCH }}"
            - name: "Install PHP"
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "${{ matrix.php-version }}"
                  coverage: none
                  tools: composer:v2
            - name: "Show the Composer configuration"
              run: "composer config --global --list"
            - name: "Kill fe-skeleton"
              run: |
                  composer config --unset "repositories.skeleton-build"
                  composer config --unset "repositories.skeleton-composer-installer"
                  composer config --unset "repositories.skeleton-composer-templates"
                  composer config --unset "repositories.skeleton-ddev"
                  composer config --unset "repositories.skeleton-ddev-commands"
                  composer config --unset "repositories.skeleton-vite"
                  composer config --unset "repositories.skeleton-deployment"
                  composer config --unset "repositories.skeleton-typo3"
                  rm composer.lock
                  composer remove --no-update --dev "faktore/fe-skeleton-*"
                  cat composer.json
                  composer install
            - name: "Run PHP lint"
              run: "composer ci:php:lint"
        strategy:
            fail-fast: false
            matrix:
                php-version:
                    - "8.3"
    code-quality:
        name: "Code quality checks"
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout"
              uses: actions/checkout@v4
              with:
                  ref: "${{ env.CI_GIT_BRANCH }}"
            - name: "Install PHP"
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "${{ matrix.php-version }}"
                  coverage: none
                  tools: composer:v2
            - name: "Show Composer version"
              run: "composer --version"
            - name: "Show the Composer configuration"
              run: "composer config --global --list"
            - name: "Kill fe-skeleton"
              run: |
                  composer config --unset "repositories.skeleton-build"
                  composer config --unset "repositories.skeleton-composer-installer"
                  composer config --unset "repositories.skeleton-composer-templates"
                  composer config --unset "repositories.skeleton-ddev"
                  composer config --unset "repositories.skeleton-ddev-commands"
                  composer config --unset "repositories.skeleton-vite"
                  composer config --unset "repositories.skeleton-deployment"
                  composer config --unset "repositories.skeleton-typo3"
                  rm composer.lock
                  composer remove --no-update --dev "faktore/fe-skeleton-*"
                  cat composer.json
                  composer install
            - name: "Cache dependencies installed with composer"
              uses: actions/cache@v4
              with:
                  key: "php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.json') }}"
                  path: ~/.cache/composer
                  restore-keys: "php${{ matrix.php-version }}-composer-\n"
            - name: "Install Composer dependencies"
              run: "composer update --no-progress"
            - name: "Run command"
              run: "composer ci:${{ matrix.command }}"
        strategy:
            fail-fast: false
            matrix:
                command:
                    - "composer:psr-verify"
                    - "php:cs-fixer"
                    - "php:sniff"
                    - "php:stan"
                php-version:
                    - "8.3"
    report_failure:
        if: failure()
        needs: [php-lint, code-quality]
        runs-on: ubuntu-latest
        steps:
            - name: Slack FAILURE
              id: slack-fail
              uses: slackapi/slack-github-action@v1.25.0
              with:
                payload: |
                  {
                    "text": "❌ Build failure\n${{ github.event.pull_request.html_url || github.event.head_commit.url || env.ACTION_URL }}",
                    "blocks": [
                      {
                        "type": "section",
                        "text": {
                          "type": "mrkdwn",
                          "text": "❌ Build failure\n${{ github.event.pull_request.html_url || github.event.head_commit.url || env.ACTION_URL }}"
                        }
                      }
                    ]
                  }
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
                SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

    report_success:
      if: success()
      needs: [php-lint, code-quality]
      runs-on: ubuntu-latest
      steps:
        - name: Slack SUCCESS
          id: slack-success
          uses: slackapi/slack-github-action@v1.25.0
          with:
            payload: |
              {
                "text": "✅ Build success\n${{ github.event.pull_request.html_url || github.event.head_commit.url || env.ACTION_URL }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "✅ Build success\n${{ github.event.pull_request.html_url || github.event.head_commit.url || env.ACTION_URL }}"
                    }
                  }
                ]
              }
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
